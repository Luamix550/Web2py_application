{"ast":null,"code":"// Importa React y el hook useState\nimport React,{useState}from'react';// Define una interfaz para el Estudiante\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";// Define el estado inicial para el formulario\nconst initialFormState={name:'',email:''};// Define el componente StudentRegister\nconst StudentRegister=()=>{// Usa el hook useState para manejar el estado del estudiante\nconst[student,setStudent]=useState({name:'',email:''});const[isSubmitted,setIsSubmitted]=useState(false);const[error,setError]=useState(null);// Define la función handleInputChange\nconst handleInputChange=event=>{const{name,value}=event.target;setStudent({...student,[name]:value});};// Define la función handleSubmit\nconst handleSubmit=async event=>{event.preventDefault();// Reinicia el estado isSubmitted\nsetIsSubmitted(false);// Validación para campos vacíos\nif(!student.name||!student.email){alert('Por favor, rellena todos los campos');return;}// Validación adicional para el nombre de usuario\nif(student.name.length<3){alert('El nombre de usuario debe tener al menos 3 caracteres');return;}// Validación adicional para el correo electrónico\nconst emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;if(!emailRegex.test(student.email)){alert('Por favor, introduce un correo electrónico válido');return;}try{// Verifica si el estudiante ya existe\nconst response=await fetch(\"http://127.0.0.1:8000/SIP_application/students.json?email=\".concat(student.email));// Verifica si la respuesta es correcta (estado en el rango 200-299)\nif(!response.ok){throw new Error(\"\\xA1Error HTTP! estado: \".concat(response.status));}const data=await response.json();if(data.students&&data.students.length>0){alert('Este estudiante ya existe');return;}// Envía la solicitud HTTP al backend\nawait fetch('http://127.0.0.1:8000/SIP_application/students/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(student)});setIsSubmitted(true);// Aquí puedes manejar la respuesta del servidor\n}catch(err){if(err instanceof Error){setError(err.message);}else{setError('Ocurrió un error al registrar al estudiante');}}};// Render the component\nreturn/*#__PURE__*/_jsxs(\"main\",{className:\"h-screen flex flex-col items-center justify-center\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-4xl mb-4 md:mb-6 font-bold hover:drop-shadow-[0_0_0.3rem_#ffffff70] text-gray-200 hover:duration-300 text-center duration-400\",children:\"Student Register\"}),/*#__PURE__*/_jsx(\"div\",{className:\"bg-gradient-to-b from-black from-75% to-violet-900 hover:duration-200 grid justify-items-center rounded-3xl py-6 md:py-5 shadow-md shadow-purple-600 border-[1px] hover:shadow-violet-500 hover:shadow-lg border-purple-950 w-full max-w-screen-lg mx-auto\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"space-y-4 md:space-y-3 p-4 md:p-6 w-full mx-auto\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm mb-2\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Student name:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:student.name,onChange:handleInputChange,className:\"block w-full mt-4 hover:drop-shadow-[0_0_0.1rem_#ffffff70] duration-400 p-2 md:p-1 text-center text-gray-300 md:text-[15px] hover:text-white border border-purple-400 shadow shadow-purple-950 hover:duration-300 hover:shadow-inner hover:shadow-purple-700 rounded-full\",required:true})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Email:\",/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:student.email,onChange:handleInputChange,className:\"block w-full mt-4 hover:drop-shadow-[0_0_0.1rem_#ffffff70] duration-400 p-2 md:p-1 text-center text-gray-300 md:text-[15px] hover:text-white border border-purple-400 shadow shadow-purple-950 hover:duration-300 hover:shadow-inner hover:shadow-purple-700 rounded-full\",required:true})]})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"block w-full mt-4 hover:drop-shadow-[0_0_0.1rem_#ffffff70] duration-400 p-2 md:p-1 text-center text-gray-300 md:text-[15px] hover:text-white border border-purple-400 shadow shadow-purple-950 hover:duration-300 hover:shadow-inner hover:shadow-purple-700 rounded-full\",children:\"Register\"}),isSubmitted&&/*#__PURE__*/_jsx(\"p\",{className:\"mt-4 text-center text-green-300\",children:\"Student has been registered successfully!\"}),error&&/*#__PURE__*/_jsxs(\"p\",{className:\"mt-4 text-center text-red-400\",children:[\"Error registering student: \",error]})]})})]});};// Export the StudentRegister component\nexport default StudentRegister;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","initialFormState","name","email","StudentRegister","student","setStudent","isSubmitted","setIsSubmitted","error","setError","handleInputChange","event","value","target","handleSubmit","preventDefault","alert","length","emailRegex","test","response","fetch","concat","ok","Error","status","data","json","students","method","headers","body","JSON","stringify","err","message","className","children","onSubmit","type","onChange","required"],"sources":["/home/jegomez/Web2py_application/web2py/applications/SIP_application/client/src/components/studentRegister.tsx"],"sourcesContent":["// Importa React y el hook useState\nimport React, { useState } from 'react';\n\n// Define una interfaz para el Estudiante\ninterface Student {\n    name: string;\n    email: string;\n}\n\n// Define el estado inicial para el formulario\nconst initialFormState = {\n    name: '',\n    email: ''\n};\n\n// Define el componente StudentRegister\nconst StudentRegister = () => {\n    // Usa el hook useState para manejar el estado del estudiante\n    const [student, setStudent] = useState<Student>({ name: '', email: '' });\n    const [isSubmitted, setIsSubmitted] = useState(false);\n    const [error, setError] = useState<string | null>(null);\n\n    // Define la función handleInputChange\n    const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = event.target;\n        setStudent({ ...student, [name]: value });\n    };\n\n    // Define la función handleSubmit\n    const handleSubmit = async (event: React.FormEvent) => {\n        event.preventDefault();\n\n        // Reinicia el estado isSubmitted\n        setIsSubmitted(false);\n\n        // Validación para campos vacíos\n        if (!student.name || !student.email) {\n            alert('Por favor, rellena todos los campos');\n            return;\n        }\n\n        // Validación adicional para el nombre de usuario\n        if (student.name.length < 3) {\n            alert('El nombre de usuario debe tener al menos 3 caracteres');\n            return;\n        }\n\n        // Validación adicional para el correo electrónico\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(student.email)) {\n            alert('Por favor, introduce un correo electrónico válido');\n            return;\n        }\n\n        try {\n            // Verifica si el estudiante ya existe\n            const response = await fetch(`http://127.0.0.1:8000/SIP_application/students.json?email=${student.email}`);\n            \n            // Verifica si la respuesta es correcta (estado en el rango 200-299)\n            if (!response.ok) {\n                throw new Error(`¡Error HTTP! estado: ${response.status}`);\n            }\n\n            const data = await response.json();\n\n            if (data.students && data.students.length > 0) {\n                alert('Este estudiante ya existe');\n                return;\n            }\n\n            // Envía la solicitud HTTP al backend\n            await fetch('http://127.0.0.1:8000/SIP_application/students/register', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(student)\n            });\n            setIsSubmitted(true);\n\n            // Aquí puedes manejar la respuesta del servidor\n        } catch (err) {\n            if (err instanceof Error) {\n                setError(err.message);\n            } else {\n                setError('Ocurrió un error al registrar al estudiante');\n            }\n        }\n    };\n\n    // Render the component\n    return (\n        <main className=\"h-screen flex flex-col items-center justify-center\">\n            <h2 className=\"text-4xl mb-4 md:mb-6 font-bold hover:drop-shadow-[0_0_0.3rem_#ffffff70] text-gray-200 hover:duration-300 text-center duration-400\">Student Register</h2>\n            <div className='bg-gradient-to-b from-black from-75% to-violet-900 hover:duration-200 grid justify-items-center rounded-3xl py-6 md:py-5 shadow-md shadow-purple-600 border-[1px] hover:shadow-violet-500 hover:shadow-lg border-purple-950 w-full max-w-screen-lg mx-auto'>\n                <form onSubmit={handleSubmit} className=\"space-y-4 md:space-y-3 p-4 md:p-6 w-full mx-auto\">\n                    <div className=\"text-sm mb-2\">\n                        <label>\n                            Student name:\n                            <input type=\"text\" name=\"name\" value={student.name} onChange={handleInputChange} className=\"block w-full mt-4 hover:drop-shadow-[0_0_0.1rem_#ffffff70] duration-400 p-2 md:p-1 text-center text-gray-300 md:text-[15px] hover:text-white border border-purple-400 shadow shadow-purple-950 hover:duration-300 hover:shadow-inner hover:shadow-purple-700 rounded-full\" required />\n                        </label>\n                        <label>\n                            Email:\n                            <input type=\"email\" name=\"email\" value={student.email} onChange={handleInputChange} className=\"block w-full mt-4 hover:drop-shadow-[0_0_0.1rem_#ffffff70] duration-400 p-2 md:p-1 text-center text-gray-300 md:text-[15px] hover:text-white border border-purple-400 shadow shadow-purple-950 hover:duration-300 hover:shadow-inner hover:shadow-purple-700 rounded-full\" required />\n                        </label>\n                    </div>\n                    <button type=\"submit\" className=\"block w-full mt-4 hover:drop-shadow-[0_0_0.1rem_#ffffff70] duration-400 p-2 md:p-1 text-center text-gray-300 md:text-[15px] hover:text-white border border-purple-400 shadow shadow-purple-950 hover:duration-300 hover:shadow-inner hover:shadow-purple-700 rounded-full\">Register</button>\n                    {isSubmitted && <p className=\"mt-4 text-center text-green-300\">Student has been registered successfully!</p>}\n                    {error && <p className=\"mt-4 text-center text-red-400\">Error registering student: {error}</p>}\n                </form>\n            </div>\n        </main>\n    );\n};\n\n// Export the StudentRegister component\nexport default StudentRegister;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}