{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const StudentRegister=()=>{const[username,setUsername]=useState('');const[email,setEmail]=useState('');const handleSubmit=async event=>{event.preventDefault();// Validación para campos vacíos\nif(!username||!email){alert('Por favor, rellena todos los campos');return;}// Validación adicional para el nombre de usuario\nif(username.length<3){alert('El nombre de usuario debe tener al menos 3 caracteres');return;}// Validación adicional para el correo electrónico\nconst emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;if(!emailRegex.test(email)){alert('Por favor, introduce un correo electrónico válido');return;}// Creación del objeto estudiante\nconst student={name:username,email};try{// Envío de la solicitud HTTP al backend\nconst response=await fetch('http://127.0.0.1:8000/SIP_application/students/register',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(student)});// Aquí puedes manejar la respuesta del servidor\n}catch(error){console.error('Error:',error);}};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Student Name:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:username,onChange:e=>setUsername(e.target.value)})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Email:\",/*#__PURE__*/_jsx(\"input\",{type:\"email\",value:email,onChange:e=>setEmail(e.target.value)})]}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",value:\"Registrar\"})]});};export default StudentRegister;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","StudentRegister","username","setUsername","email","setEmail","handleSubmit","event","preventDefault","alert","length","emailRegex","test","student","name","response","fetch","method","headers","body","JSON","stringify","error","console","onSubmit","children","type","value","onChange","e","target"],"sources":["/home/jegomez/Web2py_application/web2py/applications/SIP_application/client/src/components/studentRegister.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst StudentRegister = () => {\n    const [username, setUsername] = useState('');\n    const [email, setEmail] = useState('');\n\n    const handleSubmit = async (event: React.FormEvent) => {\n        event.preventDefault();\n    \n        // Validación para campos vacíos\n        if (!username || !email) {\n            alert('Por favor, rellena todos los campos');\n            return;\n        }\n    \n        // Validación adicional para el nombre de usuario\n        if (username.length < 3) {\n            alert('El nombre de usuario debe tener al menos 3 caracteres');\n            return;\n        }\n    \n        // Validación adicional para el correo electrónico\n        const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n        if (!emailRegex.test(email)) {\n            alert('Por favor, introduce un correo electrónico válido');\n            return;\n        }\n    \n        // Creación del objeto estudiante\n        const student = {\n            name: username,\n            email\n        };\n    \n        try {\n            // Envío de la solicitud HTTP al backend\n            const response = await fetch('http://127.0.0.1:8000/SIP_application/students/register', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(student)\n            });\n    \n            // Aquí puedes manejar la respuesta del servidor\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n    \n    return (\n        <form onSubmit={handleSubmit}>\n            <label>\n                Student Name:\n                <input type=\"text\" value={username} onChange={e => setUsername(e.target.value)} />\n            </label>\n            <label>\n                Email:\n                <input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} />\n            </label>\n            <input type=\"submit\" value=\"Registrar\" />\n        </form>\n    );\n};\n\nexport default StudentRegister;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACQ,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAU,YAAY,CAAG,KAAO,CAAAC,KAAsB,EAAK,CACnDA,KAAK,CAACC,cAAc,CAAC,CAAC,CAEtB;AACA,GAAI,CAACN,QAAQ,EAAI,CAACE,KAAK,CAAE,CACrBK,KAAK,CAAC,qCAAqC,CAAC,CAC5C,OACJ,CAEA;AACA,GAAIP,QAAQ,CAACQ,MAAM,CAAG,CAAC,CAAE,CACrBD,KAAK,CAAC,uDAAuD,CAAC,CAC9D,OACJ,CAEA;AACA,KAAM,CAAAE,UAAU,CAAG,4BAA4B,CAC/C,GAAI,CAACA,UAAU,CAACC,IAAI,CAACR,KAAK,CAAC,CAAE,CACzBK,KAAK,CAAC,mDAAmD,CAAC,CAC1D,OACJ,CAEA;AACA,KAAM,CAAAI,OAAO,CAAG,CACZC,IAAI,CAAEZ,QAAQ,CACdE,KACJ,CAAC,CAED,GAAI,CACA;AACA,KAAM,CAAAW,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,yDAAyD,CAAE,CACpFC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACR,OAAO,CAChC,CAAC,CAAC,CAEF;AACJ,CAAE,MAAOS,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAClC,CACJ,CAAC,CAED,mBACItB,KAAA,SAAMwB,QAAQ,CAAElB,YAAa,CAAAmB,QAAA,eACzBzB,KAAA,UAAAyB,QAAA,EAAO,eAEH,cAAA3B,IAAA,UAAO4B,IAAI,CAAC,MAAM,CAACC,KAAK,CAAEzB,QAAS,CAAC0B,QAAQ,CAAEC,CAAC,EAAI1B,WAAW,CAAC0B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAE,CAAC,EAC/E,CAAC,cACR3B,KAAA,UAAAyB,QAAA,EAAO,QAEH,cAAA3B,IAAA,UAAO4B,IAAI,CAAC,OAAO,CAACC,KAAK,CAAEvB,KAAM,CAACwB,QAAQ,CAAEC,CAAC,EAAIxB,QAAQ,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAE,CAAC,EAC1E,CAAC,cACR7B,IAAA,UAAO4B,IAAI,CAAC,QAAQ,CAACC,KAAK,CAAC,WAAW,CAAE,CAAC,EACvC,CAAC,CAEf,CAAC,CAED,cAAe,CAAA1B,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}